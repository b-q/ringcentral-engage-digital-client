/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SurveyQuestionChoices;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.JSON;


/**
 * SurveyQuestion
 */
@JsonPropertyOrder({
  SurveyQuestion.JSON_PROPERTY_FOREIGN_ID,
  SurveyQuestion.JSON_PROPERTY_MAIN,
  SurveyQuestion.JSON_PROPERTY_TEXT,
  SurveyQuestion.JSON_PROPERTY_CHOICES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-28T22:45:26.654875700+02:00[Europe/Paris]")
public class SurveyQuestion implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FOREIGN_ID = "foreign_id";
  private String foreignId;

  public static final String JSON_PROPERTY_MAIN = "main";
  private Boolean main;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_CHOICES = "choices";
  private List<SurveyQuestionChoices> choices = null;

  public SurveyQuestion() { 
  }

  public SurveyQuestion foreignId(String foreignId) {
    this.foreignId = foreignId;
    return this;
  }

   /**
   * The survey provider&#39;s id for this question.
   * @return foreignId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForeignId() {
    return foreignId;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignId(String foreignId) {
    this.foreignId = foreignId;
  }


  public SurveyQuestion main(Boolean main) {
    this.main = main;
    return this;
  }

   /**
   * Get main
   * @return main
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMain() {
    return main;
  }


  @JsonProperty(JSON_PROPERTY_MAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMain(Boolean main) {
    this.main = main;
  }


  public SurveyQuestion text(String text) {
    this.text = text;
    return this;
  }

   /**
   * The question&#39;s body.
   * @return text
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public SurveyQuestion choices(List<SurveyQuestionChoices> choices) {
    this.choices = choices;
    return this;
  }

  public SurveyQuestion addChoicesItem(SurveyQuestionChoices choicesItem) {
    if (this.choices == null) {
      this.choices = new ArrayList<>();
    }
    this.choices.add(choicesItem);
    return this;
  }

   /**
   * Fetched from survey provider. List of choices end user can select to answer this question.
   * @return choices
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHOICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SurveyQuestionChoices> getChoices() {
    return choices;
  }


  @JsonProperty(JSON_PROPERTY_CHOICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChoices(List<SurveyQuestionChoices> choices) {
    this.choices = choices;
  }


  /**
   * Return true if this SurveyQuestion object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SurveyQuestion surveyQuestion = (SurveyQuestion) o;
    return Objects.equals(this.foreignId, surveyQuestion.foreignId) &&
        Objects.equals(this.main, surveyQuestion.main) &&
        Objects.equals(this.text, surveyQuestion.text) &&
        Objects.equals(this.choices, surveyQuestion.choices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(foreignId, main, text, choices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SurveyQuestion {\n");
    sb.append("    foreignId: ").append(toIndentedString(foreignId)).append("\n");
    sb.append("    main: ").append(toIndentedString(main)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    choices: ").append(toIndentedString(choices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

