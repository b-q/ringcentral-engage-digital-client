/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SurveyResponseQuestion;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.JSON;


/**
 * SurveyResponse
 */
@JsonPropertyOrder({
  SurveyResponse.JSON_PROPERTY_ID,
  SurveyResponse.JSON_PROPERTY_CREATED_AT,
  SurveyResponse.JSON_PROPERTY_UPDATED_AT,
  SurveyResponse.JSON_PROPERTY_MAIN_INDICATOR,
  SurveyResponse.JSON_PROPERTY_MAIN_INDICATOR_SCALED,
  SurveyResponse.JSON_PROPERTY_INTERVENTION_ID,
  SurveyResponse.JSON_PROPERTY_SURVEY_ID,
  SurveyResponse.JSON_PROPERTY_SOURCE_ID,
  SurveyResponse.JSON_PROPERTY_USER_ID,
  SurveyResponse.JSON_PROPERTY_RESPONSE_FOREIGN_ID,
  SurveyResponse.JSON_PROPERTY_QUESTIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-28T22:45:26.654875700+02:00[Europe/Paris]")
public class SurveyResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_MAIN_INDICATOR = "main_indicator";
  private Integer mainIndicator;

  public static final String JSON_PROPERTY_MAIN_INDICATOR_SCALED = "main_indicator_scaled";
  private BigDecimal mainIndicatorScaled;

  public static final String JSON_PROPERTY_INTERVENTION_ID = "intervention_id";
  private String interventionId;

  public static final String JSON_PROPERTY_SURVEY_ID = "survey_id";
  private String surveyId;

  public static final String JSON_PROPERTY_SOURCE_ID = "source_id";
  private String sourceId;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private String userId;

  public static final String JSON_PROPERTY_RESPONSE_FOREIGN_ID = "response_foreign_id";
  private String responseForeignId;

  public static final String JSON_PROPERTY_QUESTIONS = "questions";
  private List<SurveyResponseQuestion> questions = null;

  public SurveyResponse() { 
  }

  public SurveyResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public SurveyResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public SurveyResponse updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public SurveyResponse mainIndicator(Integer mainIndicator) {
    this.mainIndicator = mainIndicator;
    return this;
  }

   /**
   * Get mainIndicator
   * @return mainIndicator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMainIndicator() {
    return mainIndicator;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainIndicator(Integer mainIndicator) {
    this.mainIndicator = mainIndicator;
  }


  public SurveyResponse mainIndicatorScaled(BigDecimal mainIndicatorScaled) {
    this.mainIndicatorScaled = mainIndicatorScaled;
    return this;
  }

   /**
   * Get mainIndicatorScaled
   * @return mainIndicatorScaled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_INDICATOR_SCALED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMainIndicatorScaled() {
    return mainIndicatorScaled;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_INDICATOR_SCALED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainIndicatorScaled(BigDecimal mainIndicatorScaled) {
    this.mainIndicatorScaled = mainIndicatorScaled;
  }


  public SurveyResponse interventionId(String interventionId) {
    this.interventionId = interventionId;
    return this;
  }

   /**
   * Get interventionId
   * @return interventionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERVENTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInterventionId() {
    return interventionId;
  }


  @JsonProperty(JSON_PROPERTY_INTERVENTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterventionId(String interventionId) {
    this.interventionId = interventionId;
  }


  public SurveyResponse surveyId(String surveyId) {
    this.surveyId = surveyId;
    return this;
  }

   /**
   * Get surveyId
   * @return surveyId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SURVEY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSurveyId() {
    return surveyId;
  }


  @JsonProperty(JSON_PROPERTY_SURVEY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSurveyId(String surveyId) {
    this.surveyId = surveyId;
  }


  public SurveyResponse sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public SurveyResponse userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public SurveyResponse responseForeignId(String responseForeignId) {
    this.responseForeignId = responseForeignId;
    return this;
  }

   /**
   * The survey provider&#39;s id for this response.
   * @return responseForeignId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseForeignId() {
    return responseForeignId;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseForeignId(String responseForeignId) {
    this.responseForeignId = responseForeignId;
  }


  public SurveyResponse questions(List<SurveyResponseQuestion> questions) {
    this.questions = questions;
    return this;
  }

  public SurveyResponse addQuestionsItem(SurveyResponseQuestion questionsItem) {
    if (this.questions == null) {
      this.questions = new ArrayList<>();
    }
    this.questions.add(questionsItem);
    return this;
  }

   /**
   * Questions answered by this response.
   * @return questions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SurveyResponseQuestion> getQuestions() {
    return questions;
  }


  @JsonProperty(JSON_PROPERTY_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuestions(List<SurveyResponseQuestion> questions) {
    this.questions = questions;
  }


  /**
   * Return true if this SurveyResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SurveyResponse surveyResponse = (SurveyResponse) o;
    return Objects.equals(this.id, surveyResponse.id) &&
        Objects.equals(this.createdAt, surveyResponse.createdAt) &&
        Objects.equals(this.updatedAt, surveyResponse.updatedAt) &&
        Objects.equals(this.mainIndicator, surveyResponse.mainIndicator) &&
        Objects.equals(this.mainIndicatorScaled, surveyResponse.mainIndicatorScaled) &&
        Objects.equals(this.interventionId, surveyResponse.interventionId) &&
        Objects.equals(this.surveyId, surveyResponse.surveyId) &&
        Objects.equals(this.sourceId, surveyResponse.sourceId) &&
        Objects.equals(this.userId, surveyResponse.userId) &&
        Objects.equals(this.responseForeignId, surveyResponse.responseForeignId) &&
        Objects.equals(this.questions, surveyResponse.questions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, updatedAt, mainIndicator, mainIndicatorScaled, interventionId, surveyId, sourceId, userId, responseForeignId, questions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SurveyResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    mainIndicator: ").append(toIndentedString(mainIndicator)).append("\n");
    sb.append("    mainIndicatorScaled: ").append(toIndentedString(mainIndicatorScaled)).append("\n");
    sb.append("    interventionId: ").append(toIndentedString(interventionId)).append("\n");
    sb.append("    surveyId: ").append(toIndentedString(surveyId)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    responseForeignId: ").append(toIndentedString(responseForeignId)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

