/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SurveyQuestion;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.JSON;


/**
 * Survey
 */
@JsonPropertyOrder({
  Survey.JSON_PROPERTY_ID,
  Survey.JSON_PROPERTY_CREATED_AT,
  Survey.JSON_PROPERTY_UPDATED_AT,
  Survey.JSON_PROPERTY_NAME,
  Survey.JSON_PROPERTY_LINK,
  Survey.JSON_PROPERTY_ACTIVE,
  Survey.JSON_PROPERTY_FROM_NAME,
  Survey.JSON_PROPERTY_INSTANT_SEND_THRESHOLD,
  Survey.JSON_PROPERTY_MAX_TIME_SINCE_LAST_REPLY,
  Survey.JSON_PROPERTY_SEND_DELAY,
  Survey.JSON_PROPERTY_CATEGORY_IDS,
  Survey.JSON_PROPERTY_TEAM_IDS,
  Survey.JSON_PROPERTY_SOURCE_IDS,
  Survey.JSON_PROPERTY_TYPE,
  Survey.JSON_PROPERTY_QUESTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-13T22:37:55.741968+01:00[Europe/Paris]")
public class Survey implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_FROM_NAME = "from_name";
  private String fromName;

  public static final String JSON_PROPERTY_INSTANT_SEND_THRESHOLD = "instant_send_threshold";
  private BigDecimal instantSendThreshold;

  public static final String JSON_PROPERTY_MAX_TIME_SINCE_LAST_REPLY = "max_time_since_last_reply";
  private BigDecimal maxTimeSinceLastReply;

  public static final String JSON_PROPERTY_SEND_DELAY = "send_delay";
  private BigDecimal sendDelay;

  public static final String JSON_PROPERTY_CATEGORY_IDS = "category_ids";
  private List<String> categoryIds = null;

  public static final String JSON_PROPERTY_TEAM_IDS = "team_ids";
  private List<String> teamIds = null;

  public static final String JSON_PROPERTY_SOURCE_IDS = "source_ids";
  private List<String> sourceIds = null;

  /**
   * Contains the information of the survey provider used. Currently, only provider supported is alchemer.
   */
  public enum TypeEnum {
    ALCHEMER("alchemer");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_QUESTIONS = "questions";
  private List<SurveyQuestion> questions = null;

  public Survey() { 
  }

  public Survey id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Survey createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Survey updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Survey name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name displayed in ED admin interface. Is not displayed to end users.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Survey link(String link) {
    this.link = link;
    return this;
  }

   /**
   * Link to the survey on the provider website.
   * @return link
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(String link) {
    this.link = link;
  }


  public Survey active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public Survey fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

   /**
   * Name displayed as sender when survey is sent to end user. Currently only applies to surveys sent by email.
   * @return fromName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromName() {
    return fromName;
  }


  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromName(String fromName) {
    this.fromName = fromName;
  }


  public Survey instantSendThreshold(BigDecimal instantSendThreshold) {
    this.instantSendThreshold = instantSendThreshold;
    return this;
  }

   /**
   * Any intervention whose duration is shorter than this value (in seconds) will have the survey sent instantly.
   * @return instantSendThreshold
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANT_SEND_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInstantSendThreshold() {
    return instantSendThreshold;
  }


  @JsonProperty(JSON_PROPERTY_INSTANT_SEND_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstantSendThreshold(BigDecimal instantSendThreshold) {
    this.instantSendThreshold = instantSendThreshold;
  }


  public Survey maxTimeSinceLastReply(BigDecimal maxTimeSinceLastReply) {
    this.maxTimeSinceLastReply = maxTimeSinceLastReply;
    return this;
  }

   /**
   * If last message from end user is older than this duration (in seconds), no survey will be sent.
   * @return maxTimeSinceLastReply
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_TIME_SINCE_LAST_REPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxTimeSinceLastReply() {
    return maxTimeSinceLastReply;
  }


  @JsonProperty(JSON_PROPERTY_MAX_TIME_SINCE_LAST_REPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxTimeSinceLastReply(BigDecimal maxTimeSinceLastReply) {
    this.maxTimeSinceLastReply = maxTimeSinceLastReply;
  }


  public Survey sendDelay(BigDecimal sendDelay) {
    this.sendDelay = sendDelay;
    return this;
  }

   /**
   * Delay before sending survey to end users.
   * @return sendDelay
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSendDelay() {
    return sendDelay;
  }


  @JsonProperty(JSON_PROPERTY_SEND_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendDelay(BigDecimal sendDelay) {
    this.sendDelay = sendDelay;
  }


  public Survey categoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public Survey addCategoryIdsItem(String categoryIdsItem) {
    if (this.categoryIds == null) {
      this.categoryIds = new ArrayList<>();
    }
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

   /**
   * Get categoryIds
   * @return categoryIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCategoryIds() {
    return categoryIds;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
  }


  public Survey teamIds(List<String> teamIds) {
    this.teamIds = teamIds;
    return this;
  }

  public Survey addTeamIdsItem(String teamIdsItem) {
    if (this.teamIds == null) {
      this.teamIds = new ArrayList<>();
    }
    this.teamIds.add(teamIdsItem);
    return this;
  }

   /**
   * Get teamIds
   * @return teamIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTeamIds() {
    return teamIds;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamIds(List<String> teamIds) {
    this.teamIds = teamIds;
  }


  public Survey sourceIds(List<String> sourceIds) {
    this.sourceIds = sourceIds;
    return this;
  }

  public Survey addSourceIdsItem(String sourceIdsItem) {
    if (this.sourceIds == null) {
      this.sourceIds = new ArrayList<>();
    }
    this.sourceIds.add(sourceIdsItem);
    return this;
  }

   /**
   * Get sourceIds
   * @return sourceIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSourceIds() {
    return sourceIds;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceIds(List<String> sourceIds) {
    this.sourceIds = sourceIds;
  }


  public Survey type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Contains the information of the survey provider used. Currently, only provider supported is alchemer.
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Survey questions(List<SurveyQuestion> questions) {
    this.questions = questions;
    return this;
  }

  public Survey addQuestionsItem(SurveyQuestion questionsItem) {
    if (this.questions == null) {
      this.questions = new ArrayList<>();
    }
    this.questions.add(questionsItem);
    return this;
  }

   /**
   * Fetched from survey provider. List of questions asked in this survey.
   * @return questions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SurveyQuestion> getQuestions() {
    return questions;
  }


  @JsonProperty(JSON_PROPERTY_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuestions(List<SurveyQuestion> questions) {
    this.questions = questions;
  }


  /**
   * Return true if this Survey object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Survey survey = (Survey) o;
    return Objects.equals(this.id, survey.id) &&
        Objects.equals(this.createdAt, survey.createdAt) &&
        Objects.equals(this.updatedAt, survey.updatedAt) &&
        Objects.equals(this.name, survey.name) &&
        Objects.equals(this.link, survey.link) &&
        Objects.equals(this.active, survey.active) &&
        Objects.equals(this.fromName, survey.fromName) &&
        Objects.equals(this.instantSendThreshold, survey.instantSendThreshold) &&
        Objects.equals(this.maxTimeSinceLastReply, survey.maxTimeSinceLastReply) &&
        Objects.equals(this.sendDelay, survey.sendDelay) &&
        Objects.equals(this.categoryIds, survey.categoryIds) &&
        Objects.equals(this.teamIds, survey.teamIds) &&
        Objects.equals(this.sourceIds, survey.sourceIds) &&
        Objects.equals(this.type, survey.type) &&
        Objects.equals(this.questions, survey.questions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, updatedAt, name, link, active, fromName, instantSendThreshold, maxTimeSinceLastReply, sendDelay, categoryIds, teamIds, sourceIds, type, questions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Survey {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    instantSendThreshold: ").append(toIndentedString(instantSendThreshold)).append("\n");
    sb.append("    maxTimeSinceLastReply: ").append(toIndentedString(maxTimeSinceLastReply)).append("\n");
    sb.append("    sendDelay: ").append(toIndentedString(sendDelay)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("    teamIds: ").append(toIndentedString(teamIds)).append("\n");
    sb.append("    sourceIds: ").append(toIndentedString(sourceIds)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

