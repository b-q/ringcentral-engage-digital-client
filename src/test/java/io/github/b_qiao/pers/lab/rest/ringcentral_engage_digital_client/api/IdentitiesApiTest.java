/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllIdentitiesResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.Identity;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IdentitiesApi
 */
public class IdentitiesApiTest {

    private final IdentitiesApi api = new IdentitiesApi();

    /**
     * Getting all identities
     *
     * This method renders identities ordered by creation date (descending). Only identities in sources where token’s user has “read” permission are returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllIdentitiesTest() throws ApiException {
        //String communityId = null;
        //String identityGroupId = null;
        //String userId = null;
        //String sort = null;
        //String foreignId = null;
        //String uuid = null;
        //Integer offset = null;
        //Integer limit = null;
        //GetAllIdentitiesResponse response = api.getAllIdentities(communityId, identityGroupId, userId, sort, foreignId, uuid, offset, limit);
        // TODO: test validations
    }

    /**
     * Getting an identity from its id
     *
     * This method renders an identity from given id. If token’s user does not have “read” on identity’s source community a 404 HTTP response will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIdentityTest() throws ApiException {
        //String identityId = null;
        //Identity response = api.getIdentity(identityId);
        // TODO: test validations
    }

}
