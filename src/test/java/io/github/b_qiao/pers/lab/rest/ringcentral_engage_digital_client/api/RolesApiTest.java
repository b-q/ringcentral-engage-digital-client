/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllRolesResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.Role;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RolesApi
 */
public class RolesApiTest {

    private final RolesApi api = new RolesApi();

    /**
     * Creating a role
     *
     * This method creates a new role. In case of success it renders the created role, otherwise, it renders an error (422 HTTP code).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRoleTest() throws ApiException {
        //String label = null;
        //Boolean accessHelpCenter = null;
        //Boolean accessPreviousMessages = null;
        //Boolean accessPullMode = null;
        //Boolean adminStampAnswer = null;
        //Boolean approveContent = null;
        //Boolean askAnExpert = null;
        //Boolean assignIntervention = null;
        //Boolean authorBlockContent = null;
        //Boolean closeContentThread = null;
        //Boolean createAndDestroyExtension = null;
        //Boolean createCommunity = null;
        //Boolean createContentSource = null;
        //Boolean createUser = null;
        //Boolean delayExportContent = null;
        //Boolean deleteContentThread = null;
        //Boolean escalateToVideo = null;
        //Boolean impersonateUser = null;
        //Boolean inviteUser = null;
        //Boolean manageApiAccessTokens = null;
        //Boolean manageAppSdkApplications = null;
        //Boolean manageAutomaticExportsTasks = null;
        //Boolean manageCategories = null;
        //Boolean manageChat = null;
        //Boolean manageCustomFields = null;
        //Boolean manageCustomNotifications = null;
        //Boolean manageEmailsTemplates = null;
        //Boolean manageFolders = null;
        //Boolean manageIce = null;
        //Boolean manageIdentities = null;
        //Boolean manageOwnNotifications = null;
        //Boolean manageReplyAssistant = null;
        //Boolean manageRoles = null;
        //Boolean manageRulesEngineRules = null;
        //Boolean manageSurveys = null;
        //Boolean manageTags = null;
        //Boolean manageTeams = null;
        //Boolean manageTopologies = null;
        //Boolean manageUsersOfMyTeams = null;
        //Boolean monitorTasks = null;
        //Boolean monitorTeamTasks = null;
        //Boolean muteContent = null;
        //Boolean openContentThread = null;
        //Boolean publishContent = null;
        //Boolean readCommunity = null;
        //Boolean readContentSource = null;
        //Boolean readEvent = null;
        //Boolean readExport = null;
        //Boolean readIdentity = null;
        //Boolean readOwnStats = null;
        //Boolean readPresence = null;
        //Boolean readStats = null;
        //Boolean readSurveys = null;
        //Boolean readUser = null;
        //Boolean receiveTasks = null;
        //Boolean replyWithAssistant = null;
        //Boolean searchContents = null;
        //Boolean searchEvent = null;
        //Boolean updateCommunity = null;
        //Boolean updateContentSource = null;
        //Boolean updateExtension = null;
        //Boolean updateIdentity = null;
        //Boolean updateIntervention = null;
        //Boolean updateOwnIntervention = null;
        //Boolean updateSettings = null;
        //Boolean updateTimeSheet = null;
        //Boolean updateUser = null;
        //Boolean useEmoji = null;
        //Role response = api.createRole(label, accessHelpCenter, accessPreviousMessages, accessPullMode, adminStampAnswer, approveContent, askAnExpert, assignIntervention, authorBlockContent, closeContentThread, createAndDestroyExtension, createCommunity, createContentSource, createUser, delayExportContent, deleteContentThread, escalateToVideo, impersonateUser, inviteUser, manageApiAccessTokens, manageAppSdkApplications, manageAutomaticExportsTasks, manageCategories, manageChat, manageCustomFields, manageCustomNotifications, manageEmailsTemplates, manageFolders, manageIce, manageIdentities, manageOwnNotifications, manageReplyAssistant, manageRoles, manageRulesEngineRules, manageSurveys, manageTags, manageTeams, manageTopologies, manageUsersOfMyTeams, monitorTasks, monitorTeamTasks, muteContent, openContentThread, publishContent, readCommunity, readContentSource, readEvent, readExport, readIdentity, readOwnStats, readPresence, readStats, readSurveys, readUser, receiveTasks, replyWithAssistant, searchContents, searchEvent, updateCommunity, updateContentSource, updateExtension, updateIdentity, updateIntervention, updateOwnIntervention, updateSettings, updateTimeSheet, updateUser, useEmoji);
        // TODO: test validations
    }

    /**
     * Getting all roles
     *
     * This method renders roles ordered by creation date (ascending).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllRolesTest() throws ApiException {
        //Integer offset = null;
        //Integer limit = null;
        //GetAllRolesResponse response = api.getAllRoles(offset, limit);
        // TODO: test validations
    }

    /**
     * Getting a role from its id
     *
     * This method renders a role from given id.  Authorization​: only users that can manage roles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoleTest() throws ApiException {
        //String roleId = null;
        //Role response = api.getRole(roleId);
        // TODO: test validations
    }

    /**
     * Updating a role
     *
     * This method updates an existing role from given attributes and renders it in case of success.  Authorization​: A user can’t update roles with more permissions than himself and can’t give a role a permission he doesn’t have.  Any permission updated with a user that does not have this permission will be ignored (The update is done, just not the unallowed permission)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRoleTest() throws ApiException {
        //String roleId = null;
        //Boolean accessHelpCenter = null;
        //Boolean accessPreviousMessages = null;
        //Boolean accessPullMode = null;
        //Boolean adminStampAnswer = null;
        //Boolean approveContent = null;
        //Boolean askAnExpert = null;
        //Boolean assignIntervention = null;
        //Boolean authorBlockContent = null;
        //Boolean closeContentThread = null;
        //Boolean createAndDestroyExtension = null;
        //Boolean createCommunity = null;
        //Boolean createContentSource = null;
        //Boolean createUser = null;
        //Boolean delayExportContent = null;
        //Boolean deleteContentThread = null;
        //Boolean escalateToVideo = null;
        //Boolean impersonateUser = null;
        //Boolean inviteUser = null;
        //Boolean manageApiAccessTokens = null;
        //Boolean manageAppSdkApplications = null;
        //Boolean manageAutomaticExportsTasks = null;
        //Boolean manageCategories = null;
        //Boolean manageChat = null;
        //Boolean manageCustomFields = null;
        //Boolean manageCustomNotifications = null;
        //Boolean manageEmailsTemplates = null;
        //Boolean manageFolders = null;
        //Boolean manageIce = null;
        //Boolean manageIdentities = null;
        //Boolean manageOwnNotifications = null;
        //Boolean manageReplyAssistant = null;
        //Boolean manageRoles = null;
        //Boolean manageRulesEngineRules = null;
        //Boolean manageSurveys = null;
        //Boolean manageTags = null;
        //Boolean manageTeams = null;
        //Boolean manageTopologies = null;
        //Boolean manageUsersOfMyTeams = null;
        //Boolean monitorTasks = null;
        //Boolean monitorTeamTasks = null;
        //Boolean muteContent = null;
        //Boolean openContentThread = null;
        //Boolean publishContent = null;
        //Boolean readCommunity = null;
        //Boolean readContentSource = null;
        //Boolean readEvent = null;
        //Boolean readExport = null;
        //Boolean readIdentity = null;
        //Boolean readOwnStats = null;
        //Boolean readPresence = null;
        //Boolean readStats = null;
        //Boolean readSurveys = null;
        //Boolean readUser = null;
        //Boolean receiveTasks = null;
        //Boolean replyWithAssistant = null;
        //Boolean searchContents = null;
        //Boolean searchEvent = null;
        //Boolean updateCommunity = null;
        //Boolean updateContentSource = null;
        //Boolean updateExtension = null;
        //Boolean updateIdentity = null;
        //Boolean updateIntervention = null;
        //Boolean updateOwnIntervention = null;
        //Boolean updateSettings = null;
        //Boolean updateTimeSheet = null;
        //Boolean updateUser = null;
        //Boolean useEmoji = null;
        //Role response = api.updateRole(roleId, accessHelpCenter, accessPreviousMessages, accessPullMode, adminStampAnswer, approveContent, askAnExpert, assignIntervention, authorBlockContent, closeContentThread, createAndDestroyExtension, createCommunity, createContentSource, createUser, delayExportContent, deleteContentThread, escalateToVideo, impersonateUser, inviteUser, manageApiAccessTokens, manageAppSdkApplications, manageAutomaticExportsTasks, manageCategories, manageChat, manageCustomFields, manageCustomNotifications, manageEmailsTemplates, manageFolders, manageIce, manageIdentities, manageOwnNotifications, manageReplyAssistant, manageRoles, manageRulesEngineRules, manageSurveys, manageTags, manageTeams, manageTopologies, manageUsersOfMyTeams, monitorTasks, monitorTeamTasks, muteContent, openContentThread, publishContent, readCommunity, readContentSource, readEvent, readExport, readIdentity, readOwnStats, readPresence, readStats, readSurveys, readUser, receiveTasks, replyWithAssistant, searchContents, searchEvent, updateCommunity, updateContentSource, updateExtension, updateIdentity, updateIntervention, updateOwnIntervention, updateSettings, updateTimeSheet, updateUser, useEmoji);
        // TODO: test validations
    }

}
