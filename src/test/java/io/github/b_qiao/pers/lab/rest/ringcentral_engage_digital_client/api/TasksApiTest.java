/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllTasksResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.Task;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
public class TasksApiTest {

    private final TasksApi api = new TasksApi();

    /**
     * Complete a task
     *
     * This method completes a task.  Authorization​: for that call to succeed several conditions are required:   - the task must be in an agent’s workbin.   - the access token user must either own the task or be able to monitor all tasks or be able to monitor his team’s tasks if the task is owned by one of his team member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void completeTaskTest() throws ApiException {
        //String taskId = null;
        //String queue = null;
        //Task response = api.completeTask(taskId, queue);
        // TODO: test validations
    }

    /**
     * Getting all tasks
     *
     * This method renders tasks ordered by priority (highest first) and then by creation date (latest first).  Authorization​: only users that can read tasks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTasksTest() throws ApiException {
        //String queue = null;
        //String channelId = null;
        //String step = null;
        //Integer offset = null;
        //Integer limit = null;
        //GetAllTasksResponse response = api.getAllTasks(queue, channelId, step, offset, limit);
        // TODO: test validations
    }

    /**
     * Getting a task from its id
     *
     * This method renders a task from given id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskTest() throws ApiException {
        //String taskId = null;
        //Task response = api.getTask(taskId);
        // TODO: test validations
    }

    /**
     * Move a task to another queue
     *
     * This method changes a task queue and renders it in case of success. Only accepts “undelivered” and special queue defined in topology (e.g. triage).  Authorization​: only users that have the right to monitor the task view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void moveTaskTest() throws ApiException {
        //String taskId = null;
        //String queue = null;
        //Task response = api.moveTask(taskId, queue);
        // TODO: test validations
    }

    /**
     * Transferring a task
     *
     * This method transfers an existing task and renders it in case of success.  Authorization​: only users that have the right to monitor the task view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transferTaskTest() throws ApiException {
        //String taskId = null;
        //List<String> agentIds = null;
        //String bypass = null;
        //List<String> categoryIds = null;
        //String language = null;
        //List<String> teamIds = null;
        //String comment = null;
        //Task response = api.transferTask(taskId, agentIds, bypass, categoryIds, language, teamIds, comment);
        // TODO: test validations
    }

}
