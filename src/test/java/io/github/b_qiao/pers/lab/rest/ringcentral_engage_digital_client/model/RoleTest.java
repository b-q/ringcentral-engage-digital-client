/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Role
 */
public class RoleTest {
    private final Role model = new Role();

    /**
     * Model tests for Role
     */
    @Test
    public void testRole() {
        // TODO: test Role
    }

    /**
     * Test the property 'accessHelpCenter'
     */
    @Test
    public void accessHelpCenterTest() {
        // TODO: test accessHelpCenter
    }

    /**
     * Test the property 'accessPreviousMessages'
     */
    @Test
    public void accessPreviousMessagesTest() {
        // TODO: test accessPreviousMessages
    }

    /**
     * Test the property 'accessPullMode'
     */
    @Test
    public void accessPullModeTest() {
        // TODO: test accessPullMode
    }

    /**
     * Test the property 'adminStampAnswer'
     */
    @Test
    public void adminStampAnswerTest() {
        // TODO: test adminStampAnswer
    }

    /**
     * Test the property 'anonymizeIdentity'
     */
    @Test
    public void anonymizeIdentityTest() {
        // TODO: test anonymizeIdentity
    }

    /**
     * Test the property 'approveContent'
     */
    @Test
    public void approveContentTest() {
        // TODO: test approveContent
    }

    /**
     * Test the property 'askAnExpert'
     */
    @Test
    public void askAnExpertTest() {
        // TODO: test askAnExpert
    }

    /**
     * Test the property 'assignIntervention'
     */
    @Test
    public void assignInterventionTest() {
        // TODO: test assignIntervention
    }

    /**
     * Test the property 'authorBlockContent'
     */
    @Test
    public void authorBlockContentTest() {
        // TODO: test authorBlockContent
    }

    /**
     * Test the property 'closeContentThread'
     */
    @Test
    public void closeContentThreadTest() {
        // TODO: test closeContentThread
    }

    /**
     * Test the property 'createAndDestroyExtension'
     */
    @Test
    public void createAndDestroyExtensionTest() {
        // TODO: test createAndDestroyExtension
    }

    /**
     * Test the property 'createCommunity'
     */
    @Test
    public void createCommunityTest() {
        // TODO: test createCommunity
    }

    /**
     * Test the property 'createContentSource'
     */
    @Test
    public void createContentSourceTest() {
        // TODO: test createContentSource
    }

    /**
     * Test the property 'createUser'
     */
    @Test
    public void createUserTest() {
        // TODO: test createUser
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'delayExportContent'
     */
    @Test
    public void delayExportContentTest() {
        // TODO: test delayExportContent
    }

    /**
     * Test the property 'deleteContentThread'
     */
    @Test
    public void deleteContentThreadTest() {
        // TODO: test deleteContentThread
    }

    /**
     * Test the property 'escalateToVideo'
     */
    @Test
    public void escalateToVideoTest() {
        // TODO: test escalateToVideo
    }

    /**
     * Test the property 'exportIdentity'
     */
    @Test
    public void exportIdentityTest() {
        // TODO: test exportIdentity
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'impersonateUser'
     */
    @Test
    public void impersonateUserTest() {
        // TODO: test impersonateUser
    }

    /**
     * Test the property 'inviteUser'
     */
    @Test
    public void inviteUserTest() {
        // TODO: test inviteUser
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'lockIdentity'
     */
    @Test
    public void lockIdentityTest() {
        // TODO: test lockIdentity
    }

    /**
     * Test the property 'manageApiAccessTokens'
     */
    @Test
    public void manageApiAccessTokensTest() {
        // TODO: test manageApiAccessTokens
    }

    /**
     * Test the property 'manageAppSdkApplications'
     */
    @Test
    public void manageAppSdkApplicationsTest() {
        // TODO: test manageAppSdkApplications
    }

    /**
     * Test the property 'manageCategories'
     */
    @Test
    public void manageCategoriesTest() {
        // TODO: test manageCategories
    }

    /**
     * Test the property 'manageChat'
     */
    @Test
    public void manageChatTest() {
        // TODO: test manageChat
    }

    /**
     * Test the property 'manageCustomFields'
     */
    @Test
    public void manageCustomFieldsTest() {
        // TODO: test manageCustomFields
    }

    /**
     * Test the property 'manageCustomNotifications'
     */
    @Test
    public void manageCustomNotificationsTest() {
        // TODO: test manageCustomNotifications
    }

    /**
     * Test the property 'manageEmailsTemplates'
     */
    @Test
    public void manageEmailsTemplatesTest() {
        // TODO: test manageEmailsTemplates
    }

    /**
     * Test the property 'manageFolders'
     */
    @Test
    public void manageFoldersTest() {
        // TODO: test manageFolders
    }

    /**
     * Test the property 'manageIce'
     */
    @Test
    public void manageIceTest() {
        // TODO: test manageIce
    }

    /**
     * Test the property 'manageIdentities'
     */
    @Test
    public void manageIdentitiesTest() {
        // TODO: test manageIdentities
    }

    /**
     * Test the property 'manageMessaging'
     */
    @Test
    public void manageMessagingTest() {
        // TODO: test manageMessaging
    }

    /**
     * Test the property 'manageOwnNotifications'
     */
    @Test
    public void manageOwnNotificationsTest() {
        // TODO: test manageOwnNotifications
    }

    /**
     * Test the property 'manageReplyAssistant'
     */
    @Test
    public void manageReplyAssistantTest() {
        // TODO: test manageReplyAssistant
    }

    /**
     * Test the property 'manageRoles'
     */
    @Test
    public void manageRolesTest() {
        // TODO: test manageRoles
    }

    /**
     * Test the property 'manageRulesEngineRules'
     */
    @Test
    public void manageRulesEngineRulesTest() {
        // TODO: test manageRulesEngineRules
    }

    /**
     * Test the property 'manageTags'
     */
    @Test
    public void manageTagsTest() {
        // TODO: test manageTags
    }

    /**
     * Test the property 'manageTeams'
     */
    @Test
    public void manageTeamsTest() {
        // TODO: test manageTeams
    }

    /**
     * Test the property 'manageTopologies'
     */
    @Test
    public void manageTopologiesTest() {
        // TODO: test manageTopologies
    }

    /**
     * Test the property 'manageUsersOfMyTeams'
     */
    @Test
    public void manageUsersOfMyTeamsTest() {
        // TODO: test manageUsersOfMyTeams
    }

    /**
     * Test the property 'monitorTasks'
     */
    @Test
    public void monitorTasksTest() {
        // TODO: test monitorTasks
    }

    /**
     * Test the property 'monitorTeamTasks'
     */
    @Test
    public void monitorTeamTasksTest() {
        // TODO: test monitorTeamTasks
    }

    /**
     * Test the property 'muteContent'
     */
    @Test
    public void muteContentTest() {
        // TODO: test muteContent
    }

    /**
     * Test the property 'openContentThread'
     */
    @Test
    public void openContentThreadTest() {
        // TODO: test openContentThread
    }

    /**
     * Test the property 'publishContent'
     */
    @Test
    public void publishContentTest() {
        // TODO: test publishContent
    }

    /**
     * Test the property 'readCommunity'
     */
    @Test
    public void readCommunityTest() {
        // TODO: test readCommunity
    }

    /**
     * Test the property 'readContentSource'
     */
    @Test
    public void readContentSourceTest() {
        // TODO: test readContentSource
    }

    /**
     * Test the property 'readEvent'
     */
    @Test
    public void readEventTest() {
        // TODO: test readEvent
    }

    /**
     * Test the property 'readExport'
     */
    @Test
    public void readExportTest() {
        // TODO: test readExport
    }

    /**
     * Test the property 'readIdentity'
     */
    @Test
    public void readIdentityTest() {
        // TODO: test readIdentity
    }

    /**
     * Test the property 'readOwnStats'
     */
    @Test
    public void readOwnStatsTest() {
        // TODO: test readOwnStats
    }

    /**
     * Test the property 'readPresence'
     */
    @Test
    public void readPresenceTest() {
        // TODO: test readPresence
    }

    /**
     * Test the property 'readStats'
     */
    @Test
    public void readStatsTest() {
        // TODO: test readStats
    }

    /**
     * Test the property 'readUser'
     */
    @Test
    public void readUserTest() {
        // TODO: test readUser
    }

    /**
     * Test the property 'receiveTasks'
     */
    @Test
    public void receiveTasksTest() {
        // TODO: test receiveTasks
    }

    /**
     * Test the property 'replyWithAssistant'
     */
    @Test
    public void replyWithAssistantTest() {
        // TODO: test replyWithAssistant
    }

    /**
     * Test the property 'searchContents'
     */
    @Test
    public void searchContentsTest() {
        // TODO: test searchContents
    }

    /**
     * Test the property 'searchEvent'
     */
    @Test
    public void searchEventTest() {
        // TODO: test searchEvent
    }

    /**
     * Test the property 'updateCommunity'
     */
    @Test
    public void updateCommunityTest() {
        // TODO: test updateCommunity
    }

    /**
     * Test the property 'updateContentSource'
     */
    @Test
    public void updateContentSourceTest() {
        // TODO: test updateContentSource
    }

    /**
     * Test the property 'updateExtension'
     */
    @Test
    public void updateExtensionTest() {
        // TODO: test updateExtension
    }

    /**
     * Test the property 'updateIdentity'
     */
    @Test
    public void updateIdentityTest() {
        // TODO: test updateIdentity
    }

    /**
     * Test the property 'updateIntervention'
     */
    @Test
    public void updateInterventionTest() {
        // TODO: test updateIntervention
    }

    /**
     * Test the property 'updateOwnIntervention'
     */
    @Test
    public void updateOwnInterventionTest() {
        // TODO: test updateOwnIntervention
    }

    /**
     * Test the property 'updateSettings'
     */
    @Test
    public void updateSettingsTest() {
        // TODO: test updateSettings
    }

    /**
     * Test the property 'updateTimeSheet'
     */
    @Test
    public void updateTimeSheetTest() {
        // TODO: test updateTimeSheet
    }

    /**
     * Test the property 'updateUser'
     */
    @Test
    public void updateUserTest() {
        // TODO: test updateUser
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'useCobrowsing'
     */
    @Test
    public void useCobrowsingTest() {
        // TODO: test useCobrowsing
    }

    /**
     * Test the property 'useEmoji'
     */
    @Test
    public void useEmojiTest() {
        // TODO: test useEmoji
    }

}
