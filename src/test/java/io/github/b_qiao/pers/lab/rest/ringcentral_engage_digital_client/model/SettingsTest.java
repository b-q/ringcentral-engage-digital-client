/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Settings
 */
public class SettingsTest {
    private final Settings model = new Settings();

    /**
     * Model tests for Settings
     */
    @Test
    public void testSettings() {
        // TODO: test Settings
    }

    /**
     * Test the property 'activityPresenceThreshold'
     */
    @Test
    public void activityPresenceThresholdTest() {
        // TODO: test activityPresenceThreshold
    }

    /**
     * Test the property 'activityTracking'
     */
    @Test
    public void activityTrackingTest() {
        // TODO: test activityTracking
    }

    /**
     * Test the property 'beginningOfWeek'
     */
    @Test
    public void beginningOfWeekTest() {
        // TODO: test beginningOfWeek
    }

    /**
     * Test the property 'browserNotificationsDisabled'
     */
    @Test
    public void browserNotificationsDisabledTest() {
        // TODO: test browserNotificationsDisabled
    }

    /**
     * Test the property 'contentLanguages'
     */
    @Test
    public void contentLanguagesTest() {
        // TODO: test contentLanguages
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'denyIframeIntegration'
     */
    @Test
    public void denyIframeIntegrationTest() {
        // TODO: test denyIframeIntegration
    }

    /**
     * Test the property 'disablePasswordAutocomplete'
     */
    @Test
    public void disablePasswordAutocompleteTest() {
        // TODO: test disablePasswordAutocomplete
    }

    /**
     * Test the property 'displayOnlyUnknownBbcode'
     */
    @Test
    public void displayOnlyUnknownBbcodeTest() {
        // TODO: test displayOnlyUnknownBbcode
    }

    /**
     * Test the property 'dumpInPreprod'
     */
    @Test
    public void dumpInPreprodTest() {
        // TODO: test dumpInPreprod
    }

    /**
     * Test the property 'enableAutoScrollDown'
     */
    @Test
    public void enableAutoScrollDownTest() {
        // TODO: test enableAutoScrollDown
    }

    /**
     * Test the property 'expirePasswordAfter'
     */
    @Test
    public void expirePasswordAfterTest() {
        // TODO: test expirePasswordAfter
    }

    /**
     * Test the property 'expirePasswordEnabled'
     */
    @Test
    public void expirePasswordEnabledTest() {
        // TODO: test expirePasswordEnabled
    }

    /**
     * Test the property 'fteDuration'
     */
    @Test
    public void fteDurationTest() {
        // TODO: test fteDuration
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'identityMerge'
     */
    @Test
    public void identityMergeTest() {
        // TODO: test identityMerge
    }

    /**
     * Test the property 'interventionClosingPeriod'
     */
    @Test
    public void interventionClosingPeriodTest() {
        // TODO: test interventionClosingPeriod
    }

    /**
     * Test the property 'interventionDeferRates'
     */
    @Test
    public void interventionDeferRatesTest() {
        // TODO: test interventionDeferRates
    }

    /**
     * Test the property 'interventionDeferThreshold'
     */
    @Test
    public void interventionDeferThresholdTest() {
        // TODO: test interventionDeferThreshold
    }

    /**
     * Test the property 'interventionRates'
     */
    @Test
    public void interventionRatesTest() {
        // TODO: test interventionRates
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'multiLang'
     */
    @Test
    public void multiLangTest() {
        // TODO: test multiLang
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'passwordArchivableEnabled'
     */
    @Test
    public void passwordArchivableEnabledTest() {
        // TODO: test passwordArchivableEnabled
    }

    /**
     * Test the property 'passwordArchivableSize'
     */
    @Test
    public void passwordArchivableSizeTest() {
        // TODO: test passwordArchivableSize
    }

    /**
     * Test the property 'passwordMinLength'
     */
    @Test
    public void passwordMinLengthTest() {
        // TODO: test passwordMinLength
    }

    /**
     * Test the property 'passwordNonWord'
     */
    @Test
    public void passwordNonWordTest() {
        // TODO: test passwordNonWord
    }

    /**
     * Test the property 'passwordNumbers'
     */
    @Test
    public void passwordNumbersTest() {
        // TODO: test passwordNumbers
    }

    /**
     * Test the property 'passwordRecoveryDisabled'
     */
    @Test
    public void passwordRecoveryDisabledTest() {
        // TODO: test passwordRecoveryDisabled
    }

    /**
     * Test the property 'pushEnabled'
     */
    @Test
    public void pushEnabledTest() {
        // TODO: test pushEnabled
    }

    /**
     * Test the property 'replyAsAnyIdentity'
     */
    @Test
    public void replyAsAnyIdentityTest() {
        // TODO: test replyAsAnyIdentity
    }

    /**
     * Test the property 'rtlSupport'
     */
    @Test
    public void rtlSupportTest() {
        // TODO: test rtlSupport
    }

    /**
     * Test the property 'selfApprovalRequired'
     */
    @Test
    public void selfApprovalRequiredTest() {
        // TODO: test selfApprovalRequired
    }

    /**
     * Test the property 'sessionTimeout'
     */
    @Test
    public void sessionTimeoutTest() {
        // TODO: test sessionTimeout
    }

    /**
     * Test the property 'shardingKey'
     */
    @Test
    public void shardingKeyTest() {
        // TODO: test shardingKey
    }

    /**
     * Test the property 'spellchecking'
     */
    @Test
    public void spellcheckingTest() {
        // TODO: test spellchecking
    }

    /**
     * Test the property 'style'
     */
    @Test
    public void styleTest() {
        // TODO: test style
    }

    /**
     * Test the property 'thirdPartyServicesDisabled'
     */
    @Test
    public void thirdPartyServicesDisabledTest() {
        // TODO: test thirdPartyServicesDisabled
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'urgentTaskThreshold'
     */
    @Test
    public void urgentTaskThresholdTest() {
        // TODO: test urgentTaskThreshold
    }

    /**
     * Test the property 'useTwoLettersAvatars'
     */
    @Test
    public void useTwoLettersAvatarsTest() {
        // TODO: test useTwoLettersAvatars
    }

}
