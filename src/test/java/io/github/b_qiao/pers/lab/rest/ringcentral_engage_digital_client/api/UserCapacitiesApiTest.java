/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllUserCapacitiesResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.UserCapacity;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserCapacitiesApi
 */
public class UserCapacitiesApiTest {

    private final UserCapacitiesApi api = new UserCapacitiesApi();

    /**
     * Creating a user capacity
     *
     * This method creates a new user capacity. In case of success it renders the created record, otherwise, it renders an error (422 HTTP code).  Please note that the order of the parameters is important, as the &#x60;default_capacity&#x60; and &#x60;max_capacity&#x60; will apply to the immediately above &#x60;channel_id&#x60;.  Authorization​: only users who can manage topology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserCapacityTest() throws ApiException {
        //String name = null;
        //String channelsChannelId = null;
        //Integer channelsDefaultCapacity = null;
        //Integer channelsMaxCapacity = null;
        //UserCapacity response = api.createUserCapacity(name, channelsChannelId, channelsDefaultCapacity, channelsMaxCapacity);
        // TODO: test validations
    }

    /**
     * Deleting a user capacity
     *
     * This method destroys an existing user capacity. It renders the user capacity itself. It renders a 404 if id is invalid or already destroyed.  Authorization​: only users who can manage topology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserCapacityTest() throws ApiException {
        //String userCapacityId = null;
        //UserCapacity response = api.deleteUserCapacity(userCapacityId);
        // TODO: test validations
    }

    /**
     * Getting all User Capacities
     *
     * This method renders all user capacities ordered by creation date (ascending).  Authorization​: only users who can manage topology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllUserCapacitiesTest() throws ApiException {
        //Integer offset = null;
        //Integer limit = null;
        //GetAllUserCapacitiesResponse response = api.getAllUserCapacities(offset, limit);
        // TODO: test validations
    }

    /**
     * Getting a user capacity from its id
     *
     * This method renders the user capacity corresponding to the id given in parameter. It renders a 404 if id is invalid.  Authorization​: only users who can manage topology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserCapacityTest() throws ApiException {
        //String userCapacityId = null;
        //UserCapacity response = api.getUserCapacity(userCapacityId);
        // TODO: test validations
    }

    /**
     * Updating a user capacity
     *
     * This method creates a new user capacity. In case of success it renders the created record, otherwise, it renders an error (422 HTTP code).  Please note that the order of the parameters is important, as the &#x60;default_capacity&#x60; and &#x60;max_capacity&#x60; will apply to the immediately above &#x60;channel_id&#x60;.  Authorization​: only users who can manage topology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserCapacityTest() throws ApiException {
        //String userCapacityId = null;
        //String name = null;
        //String channelsChannelId = null;
        //Integer channelsDefaultCapacity = null;
        //Integer channelsMaxCapacity = null;
        //UserCapacity response = api.updateUserCapacity(userCapacityId, name, channelsChannelId, channelsDefaultCapacity, channelsMaxCapacity);
        // TODO: test validations
    }

}
