/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.Channel;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllChannelsResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsApi
 */
public class ChannelsApiTest {

    private final ChannelsApi api = new ChannelsApi();

    /**
     * Getting all channels
     *
     * This method renders all channels ordered by date of creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllChannelsTest() throws ApiException {
        //Integer offset = null;
        //Integer limit = null;
        //GetAllChannelsResponse response = api.getAllChannels(offset, limit);
        // TODO: test validations
    }

    /**
     * Getting a channel from its id
     *
     * This method renders a channel from given id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelTest() throws ApiException {
        //String channelId = null;
        //Channel response = api.getChannel(channelId);
        // TODO: test validations
    }

    /**
     * Updating a channel
     *
     * This method updates an existing channel from given attributes and renders it in case of success.  Authorizationâ€‹: only users that are able to update channels.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChannelTest() throws ApiException {
        //String channelId = null;
        //String name = null;
        //List<String> sourceIds = null;
        //Integer softCapability = null;
        //Integer hardCapability = null;
        //Integer taskTimeoutSeconds = null;
        //Integer agentSla = null;
        //Integer agentSlaThreshold = null;
        //Channel response = api.updateChannel(channelId, name, sourceIds, softCapability, hardCapability, taskTimeoutSeconds, agentSla, agentSlaThreshold);
        // TODO: test validations
    }

}
