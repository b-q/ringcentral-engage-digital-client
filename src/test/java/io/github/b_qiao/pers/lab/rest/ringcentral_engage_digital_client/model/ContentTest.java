/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.ContentAttachment;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.ContentBodyFormatted;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Content
 */
public class ContentTest {
    private final Content model = new Content();

    /**
     * Model tests for Content
     */
    @Test
    public void testContent() {
        // TODO: test Content
    }

    /**
     * Test the property 'approvalRequired'
     */
    @Test
    public void approvalRequiredTest() {
        // TODO: test approvalRequired
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'attachmentsCount'
     */
    @Test
    public void attachmentsCountTest() {
        // TODO: test attachmentsCount
    }

    /**
     * Test the property 'authorId'
     */
    @Test
    public void authorIdTest() {
        // TODO: test authorId
    }

    /**
     * Test the property 'autoSubmitted'
     */
    @Test
    public void autoSubmittedTest() {
        // TODO: test autoSubmitted
    }

    /**
     * Test the property 'body'
     */
    @Test
    public void bodyTest() {
        // TODO: test body
    }

    /**
     * Test the property 'bodyFormatted'
     */
    @Test
    public void bodyFormattedTest() {
        // TODO: test bodyFormatted
    }

    /**
     * Test the property 'bodyInputFormat'
     */
    @Test
    public void bodyInputFormatTest() {
        // TODO: test bodyInputFormat
    }

    /**
     * Test the property 'categoryIds'
     */
    @Test
    public void categoryIdsTest() {
        // TODO: test categoryIds
    }

    /**
     * Test the property 'contextData'
     */
    @Test
    public void contextDataTest() {
        // TODO: test contextData
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'createdFrom'
     */
    @Test
    public void createdFromTest() {
        // TODO: test createdFrom
    }

    /**
     * Test the property 'creatorId'
     */
    @Test
    public void creatorIdTest() {
        // TODO: test creatorId
    }

    /**
     * Test the property 'foreignCategories'
     */
    @Test
    public void foreignCategoriesTest() {
        // TODO: test foreignCategories
    }

    /**
     * Test the property 'foreignId'
     */
    @Test
    public void foreignIdTest() {
        // TODO: test foreignId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inReplyToAuthorId'
     */
    @Test
    public void inReplyToAuthorIdTest() {
        // TODO: test inReplyToAuthorId
    }

    /**
     * Test the property 'inReplyToId'
     */
    @Test
    public void inReplyToIdTest() {
        // TODO: test inReplyToId
    }

    /**
     * Test the property 'interventionId'
     */
    @Test
    public void interventionIdTest() {
        // TODO: test interventionId
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'privateMessage'
     */
    @Test
    public void privateMessageTest() {
        // TODO: test privateMessage
    }

    /**
     * Test the property 'published'
     */
    @Test
    public void publishedTest() {
        // TODO: test published
    }

    /**
     * Test the property 'rating'
     */
    @Test
    public void ratingTest() {
        // TODO: test rating
    }

    /**
     * Test the property 'remotelyDeleted'
     */
    @Test
    public void remotelyDeletedTest() {
        // TODO: test remotelyDeleted
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'sourceType'
     */
    @Test
    public void sourceTypeTest() {
        // TODO: test sourceType
    }

    /**
     * Test the property 'sourceUrl'
     */
    @Test
    public void sourceUrlTest() {
        // TODO: test sourceUrl
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'synchronizationStatus'
     */
    @Test
    public void synchronizationStatusTest() {
        // TODO: test synchronizationStatus
    }

    /**
     * Test the property 'synchronizationError'
     */
    @Test
    public void synchronizationErrorTest() {
        // TODO: test synchronizationError
    }

    /**
     * Test the property 'threadId'
     */
    @Test
    public void threadIdTest() {
        // TODO: test threadId
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'capabilitiesSupported'
     */
    @Test
    public void capabilitiesSupportedTest() {
        // TODO: test capabilitiesSupported
    }

}
