/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllTimeSheetsResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.TimeSheet;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimeSheetsApi
 */
public class TimeSheetsApiTest {

    private final TimeSheetsApi api = new TimeSheetsApi();

    /**
     * Creating a time sheet
     *
     * This method creates a time sheet. In case of success it renders the time sheet, otherwise, it renders an error (422 HTTP code).  Authorization​: only users that can create time sheet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTimeSheetTest() throws ApiException {
        //String label = null;
        //Boolean active = null;
        //List<String> sourceIds = null;
        //String holidaysRegion = null;
        //String holidays = null;
        //String mondayHours = null;
        //String tuesdayHours = null;
        //String wednesdayHours = null;
        //String thursdayHours = null;
        //String fridayHours = null;
        //String saturdayHours = null;
        //String sundayHours = null;
        //TimeSheet response = api.createTimeSheet(label, active, sourceIds, holidaysRegion, holidays, mondayHours, tuesdayHours, wednesdayHours, thursdayHours, fridayHours, saturdayHours, sundayHours);
        // TODO: test validations
    }

    /**
     * Deleting a time sheet
     *
     * This method destroys an existing time sheet. It renders time sheet itself. It renders a 404 if id is invalid.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTimeSheetTest() throws ApiException {
        //String timeSheetId = null;
        //TimeSheet response = api.deleteTimeSheet(timeSheetId);
        // TODO: test validations
    }

    /**
     * Getting all time sheets
     *
     * This method renders time sheets ordered by active and label.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTimeSheetsTest() throws ApiException {
        //Integer offset = null;
        //Integer limit = null;
        //GetAllTimeSheetsResponse response = api.getAllTimeSheets(offset, limit);
        // TODO: test validations
    }

    /**
     * Getting a time sheet from its id
     *
     * This method renders a time sheet from given id.  Authorization​: only users that can see time sheets in administration section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTimeSheetTest() throws ApiException {
        //String timeSheetId = null;
        //TimeSheet response = api.getTimeSheet(timeSheetId);
        // TODO: test validations
    }

    /**
     * Updating a time sheet
     *
     * This method updates an existing team from given attributes and renders it in case of success.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTimeSheetTest() throws ApiException {
        //String timeSheetId = null;
        //Boolean active = null;
        //String label = null;
        //List<String> sourceIds = null;
        //String holidays = null;
        //String mondayHours = null;
        //String tuesdayHours = null;
        //String wednesdayHours = null;
        //String thursdayHours = null;
        //String fridayHours = null;
        //String saturdayHours = null;
        //String sundayHours = null;
        //TimeSheet response = api.updateTimeSheet(timeSheetId, active, label, sourceIds, holidays, mondayHours, tuesdayHours, wednesdayHours, thursdayHours, fridayHours, saturdayHours, sundayHours);
        // TODO: test validations
    }

}
