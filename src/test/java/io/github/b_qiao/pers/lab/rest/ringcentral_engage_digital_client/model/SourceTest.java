/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SourceAutoResponseTriggerEnabled;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SourceAutoResponseTriggerGracePeriods;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SourceAutoResponseTriggersInner;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SourceSignaturesInner;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.SourceTemplateMessagesInner;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Source
 */
public class SourceTest {
    private final Source model = new Source();

    /**
     * Model tests for Source
     */
    @Test
    public void testSource() {
        // TODO: test Source
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'autoDetectContentLanguage'
     */
    @Test
    public void autoDetectContentLanguageTest() {
        // TODO: test autoDetectContentLanguage
    }

    /**
     * Test the property 'channelId'
     */
    @Test
    public void channelIdTest() {
        // TODO: test channelId
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'communityId'
     */
    @Test
    public void communityIdTest() {
        // TODO: test communityId
    }

    /**
     * Test the property 'contentArchiving'
     */
    @Test
    public void contentArchivingTest() {
        // TODO: test contentArchiving
    }

    /**
     * Test the property 'contentArchivingPeriod'
     */
    @Test
    public void contentArchivingPeriodTest() {
        // TODO: test contentArchivingPeriod
    }

    /**
     * Test the property 'contentLanguages'
     */
    @Test
    public void contentLanguagesTest() {
        // TODO: test contentLanguages
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultCategoryIds'
     */
    @Test
    public void defaultCategoryIdsTest() {
        // TODO: test defaultCategoryIds
    }

    /**
     * Test the property 'defaultContentLanguage'
     */
    @Test
    public void defaultContentLanguageTest() {
        // TODO: test defaultContentLanguage
    }

    /**
     * Test the property 'enableAndroid'
     */
    @Test
    public void enableAndroidTest() {
        // TODO: test enableAndroid
    }

    /**
     * Test the property 'enableIos'
     */
    @Test
    public void enableIosTest() {
        // TODO: test enableIos
    }

    /**
     * Test the property 'enableWeb'
     */
    @Test
    public void enableWebTest() {
        // TODO: test enableWeb
    }

    /**
     * Test the property 'autoResponseTriggers'
     */
    @Test
    public void autoResponseTriggersTest() {
        // TODO: test autoResponseTriggers
    }

    /**
     * Test the property 'autoResponseTriggerEnabled'
     */
    @Test
    public void autoResponseTriggerEnabledTest() {
        // TODO: test autoResponseTriggerEnabled
    }

    /**
     * Test the property 'autoResponseTriggerGracePeriods'
     */
    @Test
    public void autoResponseTriggerGracePeriodsTest() {
        // TODO: test autoResponseTriggerGracePeriods
    }

    /**
     * Test the property 'signatures'
     */
    @Test
    public void signaturesTest() {
        // TODO: test signatures
    }

    /**
     * Test the property 'fromName'
     */
    @Test
    public void fromNameTest() {
        // TODO: test fromName
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

    /**
     * Test the property 'templateMessageNamespace'
     */
    @Test
    public void templateMessageNamespaceTest() {
        // TODO: test templateMessageNamespace
    }

    /**
     * Test the property 'hiddenFromStats'
     */
    @Test
    public void hiddenFromStatsTest() {
        // TODO: test hiddenFromStats
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'interventionMessagesBoost'
     */
    @Test
    public void interventionMessagesBoostTest() {
        // TODO: test interventionMessagesBoost
    }

    /**
     * Test the property 'liveChat'
     */
    @Test
    public void liveChatTest() {
        // TODO: test liveChat
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'slaExpiredStrategy'
     */
    @Test
    public void slaExpiredStrategyTest() {
        // TODO: test slaExpiredStrategy
    }

    /**
     * Test the property 'slaResponse'
     */
    @Test
    public void slaResponseTest() {
        // TODO: test slaResponse
    }

    /**
     * Test the property 'slaThreshold'
     */
    @Test
    public void slaThresholdTest() {
        // TODO: test slaThreshold
    }

    /**
     * Test the property 'slaFilteringCategoriesStrategy'
     */
    @Test
    public void slaFilteringCategoriesStrategyTest() {
        // TODO: test slaFilteringCategoriesStrategy
    }

    /**
     * Test the property 'slaFilteringCategoryIds'
     */
    @Test
    public void slaFilteringCategoryIdsTest() {
        // TODO: test slaFilteringCategoryIds
    }

    /**
     * Test the property 'defaultTaskPriority'
     */
    @Test
    public void defaultTaskPriorityTest() {
        // TODO: test defaultTaskPriority
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'templateMessages'
     */
    @Test
    public void templateMessagesTest() {
        // TODO: test templateMessages
    }

    /**
     * Test the property 'timeSheetIds'
     */
    @Test
    public void timeSheetIdsTest() {
        // TODO: test timeSheetIds
    }

    /**
     * Test the property 'transferredTasksBoost'
     */
    @Test
    public void transferredTasksBoostTest() {
        // TODO: test transferredTasksBoost
    }

    /**
     * Test the property 'attachmentsSecurityLevel'
     */
    @Test
    public void attachmentsSecurityLevelTest() {
        // TODO: test attachmentsSecurityLevel
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'userThreadDefaultCategoryIds'
     */
    @Test
    public void userThreadDefaultCategoryIdsTest() {
        // TODO: test userThreadDefaultCategoryIds
    }

    /**
     * Test the property 'timeForThreadInclusion'
     */
    @Test
    public void timeForThreadInclusionTest() {
        // TODO: test timeForThreadInclusion
    }

    /**
     * Test the property 'timeForThreadInclusionEnabled'
     */
    @Test
    public void timeForThreadInclusionEnabledTest() {
        // TODO: test timeForThreadInclusionEnabled
    }

    /**
     * Test the property 'emailParser'
     */
    @Test
    public void emailParserTest() {
        // TODO: test emailParser
    }

    /**
     * Test the property 'imapSmtpEmail'
     */
    @Test
    public void imapSmtpEmailTest() {
        // TODO: test imapSmtpEmail
    }

    /**
     * Test the property 'imapMailboxesToImport'
     */
    @Test
    public void imapMailboxesToImportTest() {
        // TODO: test imapMailboxesToImport
    }

    /**
     * Test the property 'imapMailboxUsedForSentMail'
     */
    @Test
    public void imapMailboxUsedForSentMailTest() {
        // TODO: test imapMailboxUsedForSentMail
    }

    /**
     * Test the property 'imapAddress'
     */
    @Test
    public void imapAddressTest() {
        // TODO: test imapAddress
    }

    /**
     * Test the property 'imapPort'
     */
    @Test
    public void imapPortTest() {
        // TODO: test imapPort
    }

    /**
     * Test the property 'imapUsername'
     */
    @Test
    public void imapUsernameTest() {
        // TODO: test imapUsername
    }

    /**
     * Test the property 'imapUseSslTls'
     */
    @Test
    public void imapUseSslTlsTest() {
        // TODO: test imapUseSslTls
    }

    /**
     * Test the property 'imapUseStartTls'
     */
    @Test
    public void imapUseStartTlsTest() {
        // TODO: test imapUseStartTls
    }

    /**
     * Test the property 'imapAuthenticationType'
     */
    @Test
    public void imapAuthenticationTypeTest() {
        // TODO: test imapAuthenticationType
    }

    /**
     * Test the property 'imapSslVerifyMode'
     */
    @Test
    public void imapSslVerifyModeTest() {
        // TODO: test imapSslVerifyMode
    }

    /**
     * Test the property 'smtpAddress'
     */
    @Test
    public void smtpAddressTest() {
        // TODO: test smtpAddress
    }

    /**
     * Test the property 'smtpPort'
     */
    @Test
    public void smtpPortTest() {
        // TODO: test smtpPort
    }

    /**
     * Test the property 'smtpUsername'
     */
    @Test
    public void smtpUsernameTest() {
        // TODO: test smtpUsername
    }

    /**
     * Test the property 'smtpUseSslTls'
     */
    @Test
    public void smtpUseSslTlsTest() {
        // TODO: test smtpUseSslTls
    }

    /**
     * Test the property 'smtpUseStartTls'
     */
    @Test
    public void smtpUseStartTlsTest() {
        // TODO: test smtpUseStartTls
    }

    /**
     * Test the property 'smtpAuthenticationType'
     */
    @Test
    public void smtpAuthenticationTypeTest() {
        // TODO: test smtpAuthenticationType
    }

    /**
     * Test the property 'smtpSslVerifyMode'
     */
    @Test
    public void smtpSslVerifyModeTest() {
        // TODO: test smtpSslVerifyMode
    }

    /**
     * Test the property 'smtpHeloDomain'
     */
    @Test
    public void smtpHeloDomainTest() {
        // TODO: test smtpHeloDomain
    }

    /**
     * Test the property 'threadingHeuristics'
     */
    @Test
    public void threadingHeuristicsTest() {
        // TODO: test threadingHeuristics
    }

    /**
     * Test the property 'spamAssassinLevel'
     */
    @Test
    public void spamAssassinLevelTest() {
        // TODO: test spamAssassinLevel
    }

    /**
     * Test the property 'whitelistedEmails'
     */
    @Test
    public void whitelistedEmailsTest() {
        // TODO: test whitelistedEmails
    }

    /**
     * Test the property 'ccBlacklist'
     */
    @Test
    public void ccBlacklistTest() {
        // TODO: test ccBlacklist
    }

    /**
     * Test the property 'postmarkEnabled'
     */
    @Test
    public void postmarkEnabledTest() {
        // TODO: test postmarkEnabled
    }

}
