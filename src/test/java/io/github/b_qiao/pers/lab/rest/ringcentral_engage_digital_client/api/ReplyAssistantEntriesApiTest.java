/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.GetAllReplyAssistantEntriesResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.ReplyAssistantEntry;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplyAssistantEntriesApi
 */
public class ReplyAssistantEntriesApiTest {

    private final ReplyAssistantEntriesApi api = new ReplyAssistantEntriesApi();

    /**
     * Creating an entry
     *
     * This method creates a reply assistant entry. In case of success it renders the entry, otherwise, it renders an error (422 HTTP code).  Authorization​: only users that have the right to manage reply assistant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createReplyAssistantEntryTest() throws ApiException {
        //String label = null;
        //ReplyAssistantEntry response = api.createReplyAssistantEntry(label);
        // TODO: test validations
    }

    /**
     * Deleting a reply assistant entry
     *
     * This method destroys an existing entry. It renders the entry itself. It renders a 404 if id is invalid.  Authorization​: only users that have the right to manage reply assistant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteReplyAssistantEntryTest() throws ApiException {
        //String replyAssistantEntryId = null;
        //ReplyAssistantEntry response = api.deleteReplyAssistantEntry(replyAssistantEntryId);
        // TODO: test validations
    }

    /**
     * Getting​ a​ll​ reply assistant e​ntries
     *
     * This method renders all entries ordered by creation date (ascending).  Authorization​: only users that have the right to manage reply assistant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllReplyAssistantEntriesTest() throws ApiException {
        //Integer offset = null;
        //Integer limit = null;
        //GetAllReplyAssistantEntriesResponse response = api.getAllReplyAssistantEntries(offset, limit);
        // TODO: test validations
    }

    /**
     * Getting a reply assistant entry from its id
     *
     * This method renders an entry from given id.  Authorization​: only users that have the right to manage reply assistant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReplyAssistantEntryTest() throws ApiException {
        //String replyAssistantEntryId = null;
        //ReplyAssistantEntry response = api.getReplyAssistantEntry(replyAssistantEntryId);
        // TODO: test validations
    }

    /**
     * Updating a reply assistant entry
     *
     * This method updates an existing entry from given attributes and renders it in case of success.  Authorization​: only users that have the right to manage reply assistant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateReplyAssistantEntryTest() throws ApiException {
        //String replyAssistantEntryId = null;
        //String label = null;
        //String foreignId = null;
        //List<String> categoryIds = null;
        //List<String> shortcuts = null;
        //String entryGroupId = null;
        //List<String> sourceIds = null;
        //ReplyAssistantEntry response = api.updateReplyAssistantEntry(replyAssistantEntryId, label, foreignId, categoryIds, shortcuts, entryGroupId, sourceIds);
        // TODO: test validations
    }

}
