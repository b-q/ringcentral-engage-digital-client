/*
 * RingCentral Engage Digital API
 * REST API for RingCentral Engage Digital
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.api;

import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.handler.auth.*;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.BotCompleteResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.HandoverFromBotToAgentResponse;
import io.github.b_qiao.pers.lab.rest.ringcentral_engage_digital_client.model.Intervention;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BotsApi
 */
public class BotsApiTest {

    private final BotsApi api = new BotsApi();

    /**
     * Bot complete
     *
     * This method is used to complete an intervention from a bot (closing the intervention and completing the task). In case of success it renders 200, otherwise, it renders an error (422 HTTP code).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botCompleteTest() throws ApiException {
        //String interventionId = null;
        //Boolean closeThread = null;
        //BotCompleteResponse response = api.botComplete(interventionId, closeThread);
        // TODO: test validations
    }

    /**
     * Bot engage
     *
     * This method is used to engage a thread from a bot. In case of success it renders the intervention, otherwise, it renders an error (422 HTTP code). This method opens intervention as the virtual agent user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botEngageTest() throws ApiException {
        //String contentId = null;
        //Intervention response = api.botEngage(contentId);
        // TODO: test validations
    }

    /**
     * Bot handover
     *
     * This method is used to handover a conversation between a bot and an agent. It handles 2 different cases, specific sources handover (Messenger for example, see Bots API doc) and handover between Engage Virtual Agents and human agents
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void handoverFromBotToAgentTest() throws ApiException {
        //String from = null;
        //String to = null;
        //String type = null;
        //String identityForeignId = null;
        //String appId = null;
        //String interventionId = null;
        //HandoverFromBotToAgentResponse response = api.handoverFromBotToAgent(from, to, type, identityForeignId, appId, interventionId);
        // TODO: test validations
    }

}
